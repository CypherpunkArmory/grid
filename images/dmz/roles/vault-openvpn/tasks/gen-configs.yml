---
- name: Have I already generated the ovpn key?
  environment:
    VAULT_TOKEN: "{{ vault_token }}"
  command: vault kv get -field=key secret/ovpn
  ignore_errors: True
  register: ovpn_created

- name: Generate OpenVPN Certificates
  environment:
    VAULT_TOKEN: "{{ vault_token }}"
  when: ovpn_created is failed
  block:
    - name: Use TLS Authentication Hardening
      shell: |
        openvpn --genkey --secret openvpn.key
        vault kv put secret/ovpn key=@openvpn.key
        rm openvpn.key

    - name: Interpolate templates
      template:
        src: templates/server.j2.conf
        dest: /tmp/server.conf

    - name: Interpolate templates
      template:
        src: templates/client.j2.conf
        dest: /tmp/client.conf

    - name: Generate Server Config
      command: "vault-openvpn server vpn.{{vpn_domain | regex_replace('_', '.')}} --auto-revoke --pki-mountpoint {{vpn_domain}} --ovpn-key secret/ovpn --template-path /tmp/"
      register: openvpn_server

    - name: Generate Client Config
      command: "vault-openvpn client dev.{{vpn_domain | regex_replace('_', '.')}} --auto-revoke --pki-mountpoint {{vpn_domain}} --ovpn-key secret/ovpn --template-path /tmp/"
      register: openvpn_client

    - name: Write the Server Config to KBFS
      copy:
        content: "{{openvpn_server.stdout}}"
        dest: "{{ output_directory }}/openvpn_server.conf"

    - name: Write the Client Config to KBFS
      copy:
        content: "{{openvpn_client.stdout}}"
        dest: "{{ output_directory }}/openvpn_client.ovpn"


