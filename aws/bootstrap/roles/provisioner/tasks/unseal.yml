- name: Unseal and Initialize the Vault
  block:
    - name: Write an unsealable hcl to config
      template:
        src: templates/vault.j2.hcl
        dest: /etc/vault.hcl
        owner: vault
        group: vault
        mode: 0644

    - name: Restart the Vault Server
      service:
        name: vault
        state: restarted

    - name: Wait for restart
      wait_for:
        port: 8200
        delay: 5

    - name: Register the Vault Initialization Status
      command: vault status -format=json
      ignore_errors: yes
      register: vault_status

    - name: Set Vault Status
      set_fact:
        vault_init_status: "{{ vault_status.stdout | from_json | json_query('initialized')}}"

    - name: Initialize Vault if'n ya need
      when: not vault_init_status

      block:
        - name: Initialize Vault and Autounseal
          command: vault operator init
          register: recovery_keys

        - name: Write the recovery_keys to kbfs on the provisioning host
          become: no
          connection: local
          vars:
            ansible_python_interpreter: "{{ ansible_playbook_python }}"
          copy:
            content: "{{recovery_keys.stdout}}"
            dest: "{{ output_directory }}/vault_recovery"

    - set_fact:
        vault_token: "{{ lookup('file',vars['output_directory'] + '/vault_recovery') | regex_search('Initial Root Token: (.*)','\\1') | first }}"

    - debug:
        msg: "{{vault_token}}"

    - name: Login to Vault
      command: "vault login {{vault_token}}"





