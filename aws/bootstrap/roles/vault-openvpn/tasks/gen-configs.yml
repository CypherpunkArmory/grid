---
- name: Vault Login
  environment:
    VAULT_TOKEN: "{{ vault_token }}"
    VAULT_ADDR: "http://127.0.0.1:8200"
  command: vault login {{ vault_token }}

- name: Have I already generated the ovpn key?
  environment:
    VAULT_TOKEN: "{{ vault_token }}"
    VAULT_ADDR: "http://127.0.0.1:8200"
  command: vault kv get -field=key secret/ovpn
  ignore_errors: True
  register: ovpn_created

- name: Generate OpenVPN Certificates
  environment:
    VAULT_TOKEN: "{{ vault_token }}"
    VAULT_ADDR: "http://127.0.0.1:8200"
  when: ovpn_created is failed
  block:
    - name: Use TLS Authentication Hardening
      shell: |
        openvpn --genkey --secret openvpn.key
        vault kv put secret/ovpn key=@openvpn.key
        rm openvpn.key

    - name: Interpolate templates
      template:
        src: templates/server.j2.conf
        dest: /tmp/server.conf

    - name: Interpolate templates
      template:
        src: templates/client.j2.conf
        dest: /tmp/client.conf

    - name: Creates directory
      file:
        path: /tmp/linuxclient
        state: directory

    - name: Interpolate templates
      template:
        src: templates/linuxclient.j2.conf
        dest: /tmp/linuxclient/client.conf

    - name: Generate Server Config
      command: "vault-openvpn server vpn.{{vpn_domain | regex_replace('_', '.')}} --auto-revoke --pki-mountpoint {{vpn_domain}} --ovpn-key secret/ovpn --template-path /tmp/ --log-level debug"
      register: openvpn_server

    - name: Generate Client Config
      command: "vault-openvpn client dev.{{vpn_domain | regex_replace('_', '.')}} --auto-revoke --pki-mountpoint {{vpn_domain}} --ovpn-key secret/ovpn --template-path /tmp/ --log-level debug"
      register: openvpn_client

    - name: Generate Linux Client Config
      command: "vault-openvpn client dev.{{vpn_domain | regex_replace('_', '.')}} --auto-revoke --pki-mountpoint {{vpn_domain}} --ovpn-key secret/ovpn --template-path /tmp/linuxclient/ --log-level debug"
      register: openvpn_linuxclient

    - name: Write the Server Config to to Server
      copy:
        content: "{{openvpn_server.stdout}}"
        dest: /etc/openvpn/server.conf.template

    - name: Write the Client Config to KBFS
      connection: local
      become: no
      vars:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
      copy:
        content: "{{openvpn_client.stdout}}"
        dest: "{{ output_directory }}/openvpn_client_{{env}}.ovpn"

    - name: Write the Linux Client Config to KBFS
      connection: local
      become: no
      vars:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
      copy:
        content: "{{openvpn_linuxclient.stdout}}"
        dest: "{{ output_directory }}/openvpn_linuxclient_{{env}}.ovpn"

- name: Vault Logout
  file:
    path: /root/.vault-token
    state: absent


